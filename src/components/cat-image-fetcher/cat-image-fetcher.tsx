import { useEffect, useState, useCallback } from "react";
import axios from "axios";
import "./cat-image-fetcher.css"; // –ü–æ–¥–∫–ª—é—á–∞–µ–º CSS –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–π
import CatLoader from "../loader/cat-loader"; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ª–æ–∞–¥–µ—Ä–∞

function CatImageFetcher(): JSX.Element {
  const [catImages, setCatImages] = useState<string[]>([]); // –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
  const [currentImage, setCurrentImage] = useState<string>(""); // –¢–µ–∫—É—â–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
  const [nextImage, setNextImage] = useState<string>(""); // –°–ª–µ–¥—É—é—â–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
  const [isLoading, setIsLoading] = useState<boolean>(true); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
  const [isAnimating, setIsAnimating] = useState<boolean>(false); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∞–Ω–∏–º–∞—Ü–∏–∏
  const [showClickHint, setShowClickHint] = useState<boolean>(true); // –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ª–∏ –ø–æ–¥—Å–∫–∞–∑–∫—É –æ –∫–ª–∏–∫–µ

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ—Ç–∏–∫–∞
  const fetchCatImage = async (): Promise<string | null> => {
    try {
      const response = await axios.get(
        "https://api.thecatapi.com/v1/images/search"
      );
      return response.data[0].url; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    } catch (error) {
      console.error("Error fetching cat image:", error);
      return null;
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
  const preloadCatImages = useCallback(async (count: number) => {
    const images: string[] = [];
    for (let i = 0; i < count; i++) {
      const imageUrl = await fetchCatImage();
      if (imageUrl) {
        images.push(imageUrl);
      }
    }
    setCatImages((prevImages) => [...prevImages, ...images]); // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    setIsLoading(false); // –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞
  }, []);

  // –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–≤—ã—Ö 5 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    preloadCatImages(5); // –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≥—Ä—É–∂–∞–µ–º 5 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
  }, [preloadCatImages]); // –î–æ–±–∞–≤–ª—è–µ–º preloadCatImages –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø–æ–¥–≥—Ä—É–∑–∫–∞ –Ω–æ–≤—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π, –∫–æ–≥–¥–∞ –æ—Å—Ç–∞–µ—Ç—Å—è –º–∞–ª–æ
  useEffect(() => {
    if (catImages.length < 4 && !isLoading) {
      setIsLoading(true);
      preloadCatImages(5); // –ü–æ–¥–≥—Ä—É–∂–∞–µ–º –µ—â–µ 5
    }
  }, [catImages.length, isLoading, preloadCatImages]); // –î–æ–±–∞–≤–ª—è–µ–º preloadCatImages –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∏ —Å–ª–µ–¥—É—é—â–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ catImages
  useEffect(() => {
    if (catImages.length > 0) {
      setCurrentImage(catImages[0]);
      if (catImages.length > 1) {
        setNextImage(catImages[1]);
      }
    }
  }, [catImages]);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const handleClick = async () => {
    if (catImages.length === 0) return; // –ï—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–µ—Ç, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º

    // –°–∫—Ä—ã–≤–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É –æ –∫–ª–∏–∫–µ –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –∫–ª–∏–∫–∞
    if (showClickHint) {
      setShowClickHint(false);
    }

    // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
    setIsAnimating(true);

    // –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏ (0.5 —Å–µ–∫—É–Ω–¥—ã)
    setTimeout(() => {
      // –£–¥–∞–ª—è–µ–º –ø–µ—Ä–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –º–∞—Å—Å–∏–≤–∞ (–æ–Ω–æ —É–∂–µ –ø–æ–∫–∞–∑–∞–Ω–æ)
      setCatImages((prevImages) => prevImages.slice(1));
      setIsAnimating(false); // –ó–∞–≤–µ—Ä—à–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
    }, 500); // –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞–Ω–∏–º–∞—Ü–∏–∏
  };

  return (
    <div
      onClick={handleClick}
      className="mt-2 w-full h-[100vw] bg-white shadow-md rounded-lg overflow-hidden flex flex-col cursor-pointer relative"
    >
      <div className="absolute bottom-0 left-0 w-full text-center text-sm text-gray-950 p-1 bg-white bg-opacity-40 z-10">
        Paw for cats
      </div>
      <div className="flex-grow flex justify-center items-center relative">
        {isLoading || catImages.length === 0 ? (
          <CatLoader />
        ) : (
          <>
            {/* –¢–µ–∫—É—â–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–∑–∞—Ç—É—Ö–∞–µ—Ç) */}
            {currentImage && (
              <img
                src={currentImage}
                alt="Random Cat"
                className={`w-full h-full object-cover absolute top-0 left-0 ${
                  isAnimating ? "fade-out" : ""
                }`}
              />
            )}
            {/* –°–ª–µ–¥—É—é—â–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–ø–æ—è–≤–ª—è–µ—Ç—Å—è) */}
            {nextImage && (
              <img
                src={nextImage}
                alt="Random Cat"
                className={`w-full h-full object-cover absolute top-0 left-0 ${
                  isAnimating ? "fade-in" : "opacity-0"
                }`}
              />
            )}
          </>
        )}
      </div>
      {/* –ü–æ–¥—Å–∫–∞–∑–∫–∞ –æ –∫–ª–∏–∫–µ (–∏–∫–æ–Ω–∫–∞ —Ä—É–∫–∏) */}
      {showClickHint && (
        <div className="absolute bottom-10 right-4 transform -translate-x-1/2 -translate-y-1/2 click-hint text-5xl">
          <span className=" custom-rotate-15">üëÜ</span>
        </div>
      )}
    </div>
  );
}

export default CatImageFetcher;
